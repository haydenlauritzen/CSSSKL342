2. The file doesn't compile because a reference is declared without being initialized. Because references cannot change what they are assigned to, null references are illegal in c++.
3. onePlus() takens in an int value, declares a new variable: a and assigns it the passed in value. It then increases the new variable "a" by one, and ends the function. The original value is not changed because the function is told to create a new variable to then increase.
4. refIncrement() takes in the reference of an int variable, and then increases that value by one. The difference between onePlus() is that this function does not create any new variables to modify, it modifies the passed in variable.
5. Pair is a struct that contains an int and string value. "pairs" is a vector of "Pair" variables.
6. a call to value() passes in the reference to a string variable as a const, which lets the compiler know this value will not be changed. The function for this is to save memory as if we know the variable will not be changed, there is no reason for a new variable to be declared and assigned the passed in value.
7. value() returns an int& for two different reasons. The function parses through "pairs" to find a "Pair" such that Pair.name == s, if so will return the corresponding &Pair.name. Otherwise, it will create a new "Pair" such that Pair.name == s, Pair.val == 0, and then returns &Pair.val.